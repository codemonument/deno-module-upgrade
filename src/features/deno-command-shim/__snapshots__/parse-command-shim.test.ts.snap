export const snapshot = {};

snapshot[`Function parse-deno-command-shim > with validateDenoShim === true > should return correct shim datastructure (with deno.land) 1`] = `
{
  commandString: \`exec deno run 'https://deno.land/x/cowsay/cowsay.ts' "\$@"\`,
  execCommand: {
    execCommand: \`exec deno run 'https://deno.land/x/cowsay/cowsay.ts' "\$@"\`,
    execFlags: [
    ],
    moduleURL: URL {
  href: "https://deno.land/x/cowsay/cowsay.ts",
  origin: "https://deno.land",
  protocol: "https:",
  username: "",
  password: "",
  host: "deno.land",
  hostname: "deno.land",
  port: "",
  pathname: "/x/cowsay/cowsay.ts",
  hash: "",
  search: ""
},
  },
  lines: [
    "#!/bin/sh",
    "# generated by deno install",
    \`exec deno run 'https://deno.land/x/cowsay/cowsay.ts' "\$@"\`,
  ],
  moduleRegistry: DenoLandRegistry {},
  moduleUrlSegments: {
    completeModuleURL: URL {
  href: "https://deno.land/x/cowsay/cowsay.ts",
  origin: "https://deno.land",
  protocol: "https:",
  username: "",
  password: "",
  host: "deno.land",
  hostname: "deno.land",
  port: "",
  pathname: "/x/cowsay/cowsay.ts",
  hash: "",
  search: ""
},
    entryFileName: "cowsay.ts",
    entryFilePath: "cowsay.ts",
    moduleBaseURL: URL {
  href: "https://deno.land/x/cowsay",
  origin: "https://deno.land",
  protocol: "https:",
  username: "",
  password: "",
  host: "deno.land",
  hostname: "deno.land",
  port: "",
  pathname: "/x/cowsay",
  hash: "",
  search: ""
},
    moduleName: "cowsay",
    moduleVersion: undefined,
  },
  path: "fakePath",
}
`;

snapshot[`Function parse-deno-command-shim > with validateDenoShim === true > should throw on wrong deno comment 1`] = `
Error: Command Shim "fakePath" may not have been generated by "deno install"! 
           Force proceed by running again with --validateDenoShim=false. 
          
           File Content: 
      
           #!/bin/sh,# NOT generated by deno install - fake comment,exec deno run 'https://deno.land/x/cowsay/cowsay.ts' "\$@"
    at parseCommandShim (file:///Users/bjesuiter/Develop/codemonument/deno-modup/src/features/deno-command-shim/parse-command-shim.ts:42:7)
    at Object.<anonymous> (file:///Users/bjesuiter/Develop/codemonument/deno-modup/src/features/deno-command-shim/parse-command-shim.test.ts:25:19)
    at Function.runTest (https://deno.land/std@0.141.0/testing/_test_suite.ts:358:16)
    at Function.runTest (https://deno.land/std@0.141.0/testing/_test_suite.ts:346:33)
    at Function.runTest (https://deno.land/std@0.141.0/testing/_test_suite.ts:346:33)
    at fn (https://deno.land/std@0.141.0/testing/_test_suite.ts:316:37)
    at testStepSanitizer (deno:runtime/js/40_testing.js:449:13)
    at asyncOpSanitizer (deno:runtime/js/40_testing.js:149:15)
    at resourceSanitizer (deno:runtime/js/40_testing.js:375:13)
    at exitSanitizer (deno:runtime/js/40_testing.js:432:15)
`;

snapshot[`Function parse-deno-command-shim > with validateDenoShim === true > should parse nest.land shim  1`] = `
{
  commandString: \`exec deno run --allow-read=deps.ts --allow-write=deps.ts --allow-net=cdn.deno.land,api.deno.land,x.nest.land,raw.githubusercontent.com,github.com,api.github.com 'https://x.nest.land/dmm@2.1.0/mod.ts' "\$@"\`,
  execCommand: {
    execCommand: \`exec deno run --allow-read=deps.ts --allow-write=deps.ts --allow-net=cdn.deno.land,api.deno.land,x.nest.land,raw.githubusercontent.com,github.com,api.github.com 'https://x.nest.land/dmm@2.1.0/mod.ts' "\$@"\`,
    execFlags: [
      "--allow-read=deps.ts",
      "--allow-write=deps.ts",
      "--allow-net=cdn.deno.land,api.deno.land,x.nest.land,raw.githubusercontent.com,github.com,api.github.com",
    ],
    moduleURL: URL {
  href: "https://x.nest.land/dmm@2.1.0/mod.ts",
  origin: "https://x.nest.land",
  protocol: "https:",
  username: "",
  password: "",
  host: "x.nest.land",
  hostname: "x.nest.land",
  port: "",
  pathname: "/dmm@2.1.0/mod.ts",
  hash: "",
  search: ""
},
  },
  lines: [
    "#!/bin/sh",
    "# generated by deno install",
    \`exec deno run --allow-read=deps.ts --allow-write=deps.ts --allow-net=cdn.deno.land,api.deno.land,x.nest.land,raw.githubusercontent.com,github.com,api.github.com 'https://x.nest.land/dmm@2.1.0/mod.ts' "\$@"\`,
  ],
  moduleRegistry: NestLandRegistry {},
  moduleUrlSegments: {
    completeModuleURL: URL {
  href: "https://x.nest.land/dmm@2.1.0/mod.ts",
  origin: "https://x.nest.land",
  protocol: "https:",
  username: "",
  password: "",
  host: "x.nest.land",
  hostname: "x.nest.land",
  port: "",
  pathname: "/dmm@2.1.0/mod.ts",
  hash: "",
  search: ""
},
    entryFileName: "mod.ts",
    entryFilePath: "mod.ts",
    moduleBaseURL: URL {
  href: "https://x.nest.land/dmm",
  origin: "https://x.nest.land",
  protocol: "https:",
  username: "",
  password: "",
  host: "x.nest.land",
  hostname: "x.nest.land",
  port: "",
  pathname: "/dmm",
  hash: "",
  search: ""
},
    moduleName: "dmm",
    moduleVersion: "2.1.0",
  },
  path: "fakePath",
}
`;
